Create Validator Chain
Validate: 'abc'
OK!
Validate: 123
OK!
Validate: '@@@'
"""
EXCEPTION: Given value: "@@@" does not matches regex: "#[a-z]+#"\n
Value expected for "LDL\Validators\IntegerValidator", must be of type integer, "string" was given\n
Value: "'@@@'" does not comply to validation: [LDL\Validators\RegexValidator]
"""

Dump chain as boolean expression:
((LDL\Validators\StringValidator && LDL\Validators\RegexValidator) || (LDL\Validators\IntegerValidator && (LDL\Validators\IntegerValidator || (LDL\Validators\NumericComparisonValidator && LDL\Validators\NumericComparisonValidator))) || LDL\Validators\RegexValidator)
Dump chain as PHP (sleep for 3 seconds):
array:2 [
  "parent" => "LDL\Validators\Chain\OrValidatorChain"
  "children" => array:3 [
    0 => array:2 [
      "parent" => "LDL\Validators\Chain\AndValidatorChain"
      "children" => array:2 [
        0 => array:2 [
          "class" => "LDL\Validators\StringValidator"
          "config" => []
        ]
        1 => array:2 [
          "class" => "LDL\Validators\RegexValidator"
          "config" => array:3 [
            "regex" => "#[a-z]+#"
            "negated" => false
            "description" => "Validate regex with pattern: #[a-z]+#"
          ]
        ]
      ]
    ]
    1 => array:2 [
      "parent" => "LDL\Validators\Chain\AndValidatorChain"
      "children" => array:2 [
        0 => array:2 [
          "class" => "LDL\Validators\IntegerValidator"
          "config" => []
        ]
        1 => array:2 [
          "parent" => "LDL\Validators\Chain\OrValidatorChain"
          "children" => array:2 [
            0 => array:2 [
              "class" => "LDL\Validators\IntegerValidator"
              "config" => []
            ]
            1 => array:2 [
              "parent" => "LDL\Validators\Chain\AndValidatorChain"
              "children" => array:2 [
                0 => array:2 [
                  "class" => "LDL\Validators\NumericComparisonValidator"
                  "config" => array:4 [
                    "value" => 500
                    "operator" => ">"
                    "negated" => false
                    "description" => "Number is > than 500"
                  ]
                ]
                1 => array:2 [
                  "class" => "LDL\Validators\NumericComparisonValidator"
                  "config" => array:4 [
                    "value" => 10
                    "operator" => "<="
                    "negated" => false
                    "description" => "Number is <= than 10"
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ]
    2 => array:2 [
      "parent" => "LDL\Validators\Chain\OrValidatorChain"
      "children" => array:1 [
        0 => array:2 [
          "class" => "LDL\Validators\RegexValidator"
          "config" => array:3 [
            "regex" => "#[a-z]+#"
            "negated" => false
            "description" => "Validate regex with pattern: #[a-z]+#"
          ]
        ]
      ]
    ]
  ]
]

Dump chain as JSON (sleep for 3 seconds):
{
    "parent": "LDL\\Validators\\Chain\\OrValidatorChain",
    "children": [
        {
            "parent": "LDL\\Validators\\Chain\\AndValidatorChain",
            "children": [
                {
                    "class": "LDL\\Validators\\StringValidator",
                    "config": []
                },
                {
                    "class": "LDL\\Validators\\RegexValidator",
                    "config": {
                        "regex": "#[a-z]+#",
                        "negated": false,
                        "description": "Validate regex with pattern: #[a-z]+#"
                    }
                }
            ]
        },
        {
            "parent": "LDL\\Validators\\Chain\\AndValidatorChain",
            "children": [
                {
                    "class": "LDL\\Validators\\IntegerValidator",
                    "config": []
                },
                {
                    "parent": "LDL\\Validators\\Chain\\OrValidatorChain",
                    "children": [
                        {
                            "class": "LDL\\Validators\\IntegerValidator",
                            "config": []
                        },
                        {
                            "parent": "LDL\\Validators\\Chain\\AndValidatorChain",
                            "children": [
                                {
                                    "class": "LDL\\Validators\\NumericComparisonValidator",
                                    "config": {
                                        "value": 500,
                                        "operator": ">",
                                        "negated": false,
                                        "description": "Number is > than 500"
                                    }
                                },
                                {
                                    "class": "LDL\\Validators\\NumericComparisonValidator",
                                    "config": {
                                        "value": 10,
                                        "operator": "<=",
                                        "negated": false,
                                        "description": "Number is <= than 10"
                                    }
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "parent": "LDL\\Validators\\Chain\\OrValidatorChain",
            "children": [
                {
                    "class": "LDL\\Validators\\RegexValidator",
                    "config": {
                        "regex": "#[a-z]+#",
                        "negated": false,
                        "description": "Validate regex with pattern: #[a-z]+#"
                    }
                }
            ]
        }
    ]
}

Get Validator collection:
LDL\Validators\StringValidator
LDL\Validators\RegexValidator
LDL\Validators\IntegerValidator
LDL\Validators\IntegerValidator
LDL\Validators\NumericComparisonValidator
LDL\Validators\NumericComparisonValidator
LDL\Validators\RegexValidator